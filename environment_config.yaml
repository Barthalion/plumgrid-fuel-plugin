attributes:
  metadata:
    restrictions:
      - condition: "not (cluster:net_provider == 'neutron' and networking_parameters:segmentation_type == 'vlan')"
        message: "Please use Neutron with VLAN segmentation, the only network type supported with PLUMgrid plugin."
  plumgrid_package_repo:
    value: ''
    label: 'Repository for PLUMgrid packages'
    description: 'The IP address for PLUMgrid LCM'
    weight: 25
    type: "text"
    regex:
      source: '^((?:\d|1?\d\d|2[0-4]\d|25[0-5])(?:\.(?:\d|1?\d\d|2[0-4]\d|25[0-5])){3})|(?:^)$'
      error: "Invalid IP address"
  plumgrid_zone:
    value: ""
    label: "Enter the zone name for PLUMgrid LCM"
    description: "Enter the zone name configured on the PLUMgrid LCM"
    weight: 25
    type: "text"
    regex:
      source: '^\S+$'
      error: "Error: zone name cannot be empty or contain spaces"
  plumgrid_license:
    value: ""
    label: "Enter the license for PLUMgrid"
    description: "Enter the license that will be used by the PLUMgrid platform"
    weight: 25
    type: "text"
    regex:
      source: '^\S+$'
      error: "Error: license field cannot be empty or contain spaces"
  gateway_devs:
    value: ""
    label: "Enter the interface(s) to be used by GW"
    description: "Provide comma separated interfaces that will be used for external connectivity by the PLUMgrid gateway (eg. eth3,eth4)"
    weight: 25
    type: "text"
    regex:
      source: '^([a-zA-Z0-9]+,?\s*)+$'
      error: "Values for gateway devs are not comma separated"
  plumgrid_virtual_ip:
    value: ''
    label: 'PLUMgrid VIP to access the PLUMgrid console'
    description: 'The IP address for PLUMgrid console'
    weight: 40
    type: "text"
    regex:
      source: '^((?:\d|1?\d\d|2[0-4]\d|25[0-5])(?:\.(?:\d|1?\d\d|2[0-4]\d|25[0-5])){3})|(?:^)$'
      error: "Invalid IP address"
  plumgrid_fabric_network:
    value: ''
    label: 'Enter the PLUMgrid Fabric Network'
    description: 'Enter the network that will be used by PLUMgrid Fabric (no need to enter subnet)'
    weight: 40
    type: "text"
    regex:
      source: '^((?:\d|1?\d\d|2[0-4]\d|25[0-5])(?:\.(?:\d|1?\d\d|2[0-4]\d|25[0-5])){3})|(?:^)$'
      error: "Invalid IP address"
